eureka:
  client:
    serviceUrl:
      #注册中心的地址
      defaultZone: http://localhost:8666/eureka/
server:
  #当前服务端口号
  port: 8799
  servlet:
    context-path: /cmp-manage-service/
spring:
  application:
    #当前应用名称
    name: cmp-manage-service
#  profiles:
#    active: dev
#  datasource:
#    url: ${jdbc.url}
#    username: ${jdbc.username}
#    password: ${jdbc.password}
#    driver-class-name: ${jdbc.driver}
#    type: com.alibaba.druid.pool.DruidDataSource
#    initialSize: ${pool.initialSize}
#    minIdle: ${pool.minIdle}
#    maxActive: ${pool.maxActive}
#    maxWait: ${pool.maxWait}
#    timeBetweenEvictionRunsMillis: ${pool.timeBetweenEvictionRunsMillis}
#    minEvictableIdleTimeMillis: ${pool.minEvictableIdleTimeMillis}
#    validationQuery: ${pool.validationQuery}
#    testWhileIdle: ${pool.testWhileIdle}
#    testOnBorrow: ${pool.testOnBorrow}
#    testOnReturn: ${pool.testOnReturn}
#    filters: ${pool.filters}
#    logSlowSql: ${pool.logSlowSql}
#    poolPreparedStatements: ${pool.poolPreparedStatements}
#    maxPoolPreparedStatementPerConnectionSize: ${pool.maxPoolPreparedStatementPerConnectionSize}
#    connectionProperties: ${pool.connectionProperties}
    #useGlobalDataSourceStat: true


  dubbo:
    application:
        name: cmp-service-manage
  #注册中心地址
    protocol:
        name: dubbo
        port: ${dubbo.port}
        payload: 83886080
    registry:
        address: zookeeper://${dubbo.registry.address}
        cache:
           home: ${dubbo.registry.cache.home}
#  #调用dubbo组建扫描的项目路径
##    scan: sd.csp.service.others
#  #检查服务是否可用默认为true，不可用时抛出异常，阻止spring初始化，为方便部署，可以改成false
##    consumer:
##        check: false 
#
spring.dubbo.consumer.check: false

app:
  id: 510
# set apollo meta server address, adjust to actual address if necessary
apollo:
  meta: http://192.168.1.206:8080


#mybatis:
#  typeAliasesPackage: sd.csp.settle.dao
#  mapperLocations: classpath:xml/*.xml


mybatis-plus:
  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml
  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml
  mapper-locations: classpath:/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: sd.cmp.facade.model
  #type-aliases-package: sd.csp.settle.model
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #mp2.3+ 全局表前缀 mp_
    table-prefix: t_
    #刷新mapper 调试神器
    #refresh-mapper: true
    #数据库大写下划线转换
    #capital-mode: true
    # Sequence序列接口实现类配置
#    key-generator: com.baomidou.mybatisplus.incrementer.OracleKeyGenerator
    #逻辑删除配置（下面3个配置）
    logic-delete-value: 1
    logic-not-delete-value: 0
#    configuration:
#          cache-enabled: false


    #自定义填充策略接口实现
#    meta-object-handler: com.baomidou.springboot.MyMetaObjectHandler
  configuration:
    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
    map-underscore-to-camel-case: true
    cache-enabled: false
    #配置JdbcTypeForNull, oracle数据库必须配置
#    jdbc-type-for-null: 'null'

# redis数据库索引(默认是0)

#打印出sql
logging:
  level:
     sd.cmp.service.dao : debug

